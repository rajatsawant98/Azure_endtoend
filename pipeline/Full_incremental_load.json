{
	"name": "Full_incremental_load",
	"properties": {
		"activities": [
			{
				"name": "Lookup_lookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServer_lookup",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_load",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup_lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup_lookup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If_load_type",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().incremental_flag, 'N')\n",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "DateFromLookup",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@concat('select Lookup_date as lkpdate from dbo.lookup_table where table_name = ''', item().table_name, '''')\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "onPremSQLServer",
												"type": "DatasetReference"
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "ModifiedDateFromTable",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@concat('select max(ModifiedDate) as ModDate from ',item().table_schema,'.',item().table_name)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "onPremSQLServer",
												"type": "DatasetReference"
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "Copy_incremental",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "DateFromLookup",
												"dependencyConditions": [
													"Succeeded"
												]
											},
											{
												"activity": "ModifiedDateFromTable",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@concat('select * from ', item().table_schema, '.', item().table_name, ' where ModifiedDate > ''', formatDateTime(activity('DateFromLookup').output.firstRow.lkpdate, 'yyyy-MM-ddTHH:mm:ss'), '''')\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "onPremSQLServer",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DS_DeltaStaging",
												"type": "DatasetReference",
												"parameters": {
													"schemaname": {
														"value": "@item().table_schema",
														"type": "Expression"
													},
													"tablename": {
														"value": "@item().table_name",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "@concat('Select * from ',item().table_schema,'.',item().table_name)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "onPremSQLServer",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "Sink_for_BothLoadType",
												"type": "DatasetReference",
												"parameters": {
													"tablename": {
														"value": "@item().table_name",
														"type": "Expression"
													},
													"schemaname": {
														"value": "@item().table_schema",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Layer1_to_Layer2_Split",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ForEach_load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/loadtype_Layer1_to_layer2_split"
				},
				"linkedServiceName": {
					"referenceName": "LS_Databricks_loadtype",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"max_date": {
				"type": "String"
			}
		},
		"annotations": []
	}
}